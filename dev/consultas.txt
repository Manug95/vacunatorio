## Cantidad de vacunas compradas a cada laboratorio por rango de fecha.

SELECT labs.nombre AS laboratorio, COUNT(*) AS cantidad_vacunas, l.fechaCompra AS fecha_compra
FROM lotes AS l
INNER JOIN vacunas AS v 
    ON l.vacunaId = v.id
INNER JOIN laboratorios AS labs 
    ON labs.id = v.laboratorioId
WHERE l.fechaCompra BETWEEN fecha_inicio AND fecha_fin
GROUP BY laboratorio
ORDER BY laboratorio ASC;

-----------------------------------------------------------------------------------------------------------------------------------------

## Listado de lotes-proveedores por tipo de vacuna discriminando cuantas dosis se
## encuentran almacenadas en nación, en distribución, almacenadas en provincia, en
## centros de vacunación, aplicadas, descartadas y vencidas.

SELECT 
    COALESCE(n.tipo_vacuna, p.tipo_vacuna, c.tipo_vacuna, vd.tipo_vacuna, vv.tipo_vacuna, va.tipo_vacuna) AS tipo_vacuna,
    IFNULL(n.en_nacion, 0) AS en_nacion,
    IFNULL(p.en_provincia, 0) AS en_provincia,
    IFNULL(c.en_centros_vacunac, 0) AS en_centros_vacunac,
    IFNULL(vd.descartadas, 0) AS descartadas,
    IFNULL(vv.vencidas, 0) AS vencidas,
    IFNULL(va.aplicadas, 0) AS aplicadas
FROM 
    -- Subconsulta para obtener el total en Nación
    (SELECT tp.tipo AS tipo_vacuna, SUM(l.cantidad) AS en_nacion
     FROM lotes AS l
     INNER JOIN vacunas AS v ON l.vacunaId = v.id AND l.descarteId IS NULL
     INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
     GROUP BY tipo_vacuna) AS n
LEFT JOIN 
    -- Subconsulta para obtener el total en Provincia
    (SELECT tp.tipo AS tipo_vacuna, SUM(sl.cantidad) AS en_provincia
     FROM lotes AS l
     INNER JOIN sublotes AS sl ON sl.loteId = l.id AND sl.descarteId IS NULL
     INNER JOIN vacunas AS v ON l.vacunaId = v.id AND l.descarteId IS NULL
     INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
     GROUP BY tipo_vacuna) AS p 
ON n.tipo_vacuna = p.tipo_vacuna
LEFT JOIN 
    -- Subconsulta para obtener el total en Centros de Vacunación
    (SELECT tp.tipo AS tipo_vacuna, SUM(dp.cantidad) AS en_centros_vacunac
     FROM lotes AS l
     INNER JOIN sublotes AS sl ON sl.loteId = l.id AND sl.descarteId IS NULL
     INNER JOIN minilotes AS ml ON ml.subloteId = sl.id
     INNER JOIN distribuciones_provinciales AS dp ON dp.miniloteId = ml.id AND dp.descarteId IS NULL
     INNER JOIN vacunas AS v ON l.vacunaId = v.id AND l.descarteId IS NULL
     INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
     GROUP BY tipo_vacuna) AS c
ON n.tipo_vacuna = c.tipo_vacuna OR p.tipo_vacuna = c.tipo_vacuna
LEFT JOIN
	(SELECT tipo_vacuna, SUM(descartadas) AS descartadas
    FROM (SELECT tp.tipo AS tipo_vacuna, SUM(IFNULL(l.cantidad, 0)) AS descartadas
            FROM lotes AS l
            INNER JOIN vacunas AS v ON l.vacunaId = v.id
            INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
            INNER JOIN descartes AS d ON l.descarteId = d.id AND d.motivo != "VENCIMIENTO"
            GROUP BY tipo_vacuna

    UNION

        SELECT tp.tipo AS tipo_vacuna, SUM(IFNULL(sl.cantidad, 0)) AS descartadas
            FROM sublotes AS sl
            INNER JOIN lotes AS l ON l.id = sl.loteId
            INNER JOIN vacunas AS v ON l.vacunaId = v.id
            INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
            INNER JOIN descartes AS d ON sl.descarteId = d.id AND d.motivo != "VENCIMIENTO"
            GROUP BY tipo_vacuna

    UNION

        SELECT tp.tipo AS tipo_vacuna, SUM(IFNULL(dp.cantidad, 0)) AS descartadas
            FROM distribuciones_provinciales AS dp
            INNER JOIN minilotes AS ml ON ml.id = dp.miniloteId
            INNER JOIN sublotes AS sl ON sl.id = ml.subloteId
            INNER JOIN lotes AS l ON l.id = sl.loteId
            INNER JOIN vacunas AS v ON l.vacunaId = v.id
            INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
            INNER JOIN descartes AS d ON dp.descarteId = d.id AND d.motivo != "VENCIMIENTO"
            GROUP BY tipo_vacuna) AS descartes_totales
    GROUP BY tipo_vacuna) AS vd
-- ON vd.tipo_vacuna = n.tipo_vacuna OR vd.tipo_vacuna = c.tipo_vacuna OR vd.tipo_vacuna = p.tipo_vacuna
ON vd.tipo_vacuna IN (n.tipo_vacuna, c.tipo_vacuna, p.tipo_vacuna)
LEFT JOIN
	(SELECT tipo_vacuna, SUM(vencidas) AS vencidas
    FROM (SELECT tp.tipo AS tipo_vacuna, SUM(IFNULL(l.cantidad, 0)) AS vencidas
            FROM lotes AS l
            INNER JOIN vacunas AS v ON l.vacunaId = v.id
            INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
            INNER JOIN descartes AS d ON l.descarteId = d.id AND d.motivo = "VENCIMIENTO"
            GROUP BY tipo_vacuna

    UNION

        SELECT tp.tipo AS tipo_vacuna, SUM(IFNULL(sl.cantidad, 0)) AS vencidas
            FROM sublotes AS sl
            INNER JOIN lotes AS l ON l.id = sl.loteId
            INNER JOIN vacunas AS v ON l.vacunaId = v.id
            INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
            INNER JOIN descartes AS d ON sl.descarteId = d.id AND d.motivo = "VENCIMIENTO"
            GROUP BY tipo_vacuna

    UNION

        SELECT tp.tipo AS tipo_vacuna, SUM(IFNULL(dp.cantidad, 0)) AS vencidas
            FROM distribuciones_provinciales AS dp
            INNER JOIN minilotes AS ml ON ml.id = dp.miniloteId
            INNER JOIN sublotes AS sl ON sl.id = ml.subloteId
            INNER JOIN lotes AS l ON l.id = sl.loteId
            INNER JOIN vacunas AS v ON l.vacunaId = v.id
            INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
            INNER JOIN descartes AS d ON dp.descarteId = d.id AND d.motivo = "VENCIMIENTO"
            GROUP BY tipo_vacuna) AS vencidas_totales
    GROUP BY tipo_vacuna) AS vv
ON vv.tipo_vacuna IN (n.tipo_vacuna, c.tipo_vacuna, p.tipo_vacuna, vd.tipo_vacuna)
LEFT JOIN
	(SELECT tp.tipo AS tipo_vacuna, COUNT(*) AS aplicadas
        FROM vacunaciones AS vac
        INNER JOIN minilotes AS ml ON vac.miniloteId = ml.id
        INNER JOIN sublotes AS sl ON ml.subloteId = sl.id
        INNER JOIN lotes AS l ON sl.loteId = l.id
        INNER JOIN vacunas AS v ON l.vacunaId = v.id
        INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
     GROUP BY tipo_vacuna) AS va
ON va.tipo_vacuna IN (n.tipo_vacuna, c.tipo_vacuna, p.tipo_vacuna, vd.tipo_vacuna, vv.tipo_vacuna);

---------------------------------------------------------------------------------------------------------------------------------
## Listado de stock disponible para vacunar por tipo de vacuna por provincia (No se
## consideran vacunas que estén en depósito de nación ni en distribución).

SELECT p.nombre AS provincia, tp.tipo AS tipo_vacuna, SUM(sl.cantidad) AS stock_vacunas
FROM sublotes AS sl
INNER JOIN provincias AS p ON sl.provinciaId = p.id
INNER JOIN lotes AS l ON sl.loteId = l.id
INNER JOIN vacunas AS v ON l.vacunaId = v.id
INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
WHERE sl.descarteId IS NULL
GROUP BY provincia, tipo_vacuna;

---------------------------------------------------------------------------------------------------------------------------------

## Listado de personas por provincia, centro de vacunación y tipo de vacunas a las
## cuales se aplicó vacuna vencida.

SELECT prov.nombre AS provincia, centro, tipo_vacuna, paciente
FROM (
	SELECT sl.provinciaId AS provincia, cv.nombre AS centro, tp.tipo AS tipo_vacuna, CONCAT(p.nombres, " - ", p.dni) AS paciente
    FROM vacunaciones AS vacs
    INNER JOIN pacientes AS p ON vacs.pacienteId = p.id
    INNER JOIN centros_vacunacion AS cv ON vacs.centroId = cv.id
    INNER JOIN minilotes AS ml ON vacs.miniloteId = ml.id
    INNER JOIN sublotes AS sl ON ml.subloteId = sl.id
    INNER JOIN lotes AS l ON sl.loteId = l.id
    INNER JOIN vacunas AS v ON l.vacunaId = v.id
    INNER JOIN tipos_vacunas AS tp ON v.tipoVacunaId = tp.id
    WHERE l.vencimiento < vacs.fecha
) AS cslt
INNER JOIN provincias AS prov ON cslt.provincia = prov.id
GROUP BY provincia, centro, tipo_vacuna;

----------------------------------------------------------------------------------------------------------------------------------

## Listado de cantidad de vacunas vencidas (que no hayan sido registradas como
## descartadas) sumarizados por lotes-proveedor, provincia y centro de vacunación.

SELECT consult.lote_proveedor AS lote_proveedor
        , consult.lote_cant AS lote_cant
        , IFNULL(consult.provincia, "NO HAY") AS provincia
        , SUM(IFNULL(consult.sublote_cant, 0)) AS sublote_cant
        , IFNULL(consult.centro, "NO HAY") AS centro
        , SUM(IFNULL(consult.centros_cant, 0)) AS centros_cant
FROM (
	SELECT l.nroLote AS lote_proveedor
        , l.cantidad AS lote_cant
        , p.nombre AS provincia
        , sl.cantidad AS sublote_cant
        , cv.nombre AS centro
        , dp.cantidad AS centros_cant
    FROM  centros_vacunacion AS cv
    RIGHT JOIN distribuciones_provinciales AS dp ON dp.centroId = cv.id -- AND dp.descarteId IS NULL
    RIGHT JOIN minilotes AS ml ON dp.miniloteId = ml.id
    RIGHT JOIN sublotes AS sl ON ml.subloteId = sl.id -- AND sl.descarteId IS NULL
    RIGHT JOIN lotes AS l ON sl.loteId = l.id -- AND l.descarteId IS NULL
    INNER JOIN provincias AS p ON sl.provinciaId = p.id
    WHERE l.vencimiento < CURRENT_DATE
        AND l.descarteId IS NULL
        AND sl.descarteId IS NULL
        AND dp.descarteId IS NULL
) AS consult
GROUP BY lote_proveedor, provincia, centro;

---------------------------------------------------------------------------------------------------------------------------------------

## Cantidad de personas vacunadas por tipo de vacuna por provincia y localidad.

SELECT tp.tipo AS tipo_vacuna, p.nombre AS provincia, locs.nombre AS localidad, COUNT(DISTINCT pacienteId) AS cantidad_pacietnes
FROM vacunaciones AS vacs
INNER JOIN centros_vacunacion AS cv ON vacs.centroId = cv.id
INNER JOIN localidades AS locs ON cv.localidadId = locs.id
INNER JOIN provincias AS p ON locs.provinciaId = p.id
INNER JOIN minilotes AS ml ON vacs.miniloteId = ml.id
INNER JOIN sublotes AS sl on ml.subloteId = sl.id
INNER JOIN lotes AS l ON sl.loteId = l.id
INNER JOIN vacunas AS v ON l.vacunaId = v.id
INNER JOIN tipos_vacunas AS tp on v.tipoVacunaId = tp.id
GROUP BY tipo_vacuna, provincia, localidad;